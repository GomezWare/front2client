---
// Definimos la interfaz `Props` para tipar las propiedades (props) que va a recibir el componente.
// En este caso, `frontmatterData` es un objeto genérico que contiene las variables pasadas desde el frontmatter del archivo Astro.
interface Props {
  frontmatterData: Record<string, any>; // Define un objeto con claves string y valores de cualquier tipo.
}

// Obtenemos las props que vienen del frontmatter o del componente padre.
const { frontmatterData }: Props = Astro.props;

// Serializamos el objeto `frontmatterData` usando `JSON.stringify` para convertirlo en una cadena JSON segura.
// Esto evita riesgos de inyección de código malicioso (XSS).
const jsonData = JSON.stringify(frontmatterData);

/*
 * Evitamos exponer datos directamente en el objeto `window`. En su lugar, los pasamos a través de un contexto seguro
 * o los inyectamos como atributos o variables específicas dentro del cliente.
 */
const scriptContent = `
  // Encapsulamos los datos dentro de un espacio de nombres específico para evitar conflictos globales.
  (function() {
    if (!window.__FRONTMATTER__) {
      window.__FRONTMATTER__ = {};
    }
    window.__FRONTMATTER__.data = ${jsonData};
  })();
`;
---

<!-- Inyectamos el script en el cliente utilizando Astro directamente. -->
<script type="text/javascript" set:html={scriptContent}></script>
