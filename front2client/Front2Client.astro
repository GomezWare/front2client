---
/**
 * Definimos la interfaz `Props` para tipar las propiedades (props) que va a recibir el componente.
 * En este caso, la prop `data` es un objeto que contiene las variables que queremos pasar
 * al cliente desde el frontmatter del archivo .astro.
 */
 interface Props {
    frontmatterData: Record<string, any>; // `Record<string, any>` define un objeto con claves de tipo string y valores de cualquier tipo.
}

// Desestructuramos las props que vienen desde el frontmatter o del componente padre.
const { frontmatterData }: Props = Astro.props;

/**
 * Serializamos el objeto `data` usando `JSON.stringify` para convertirlo en una cadena
 * JSON segura que se pueda inyectar en el cliente sin riesgo de inyecci칩n de c칩digo malicioso.
 */
const jsonData = JSON.stringify(frontmatterData);
---

<!-- 
  Usamos un script con el atributo `set:html` para inyectar din치micamente el contenido de 
  las variables del frontmatter en el cliente. Esto hace que las variables se asignen
  al objeto global `window` (en este caso, `window.frontmatterData`), 
  donde estar치n disponibles para usar en el lado del cliente.
-->
<script type="text/javascript" set:html={`window.frontmatterData = ${jsonData};`}></script>
